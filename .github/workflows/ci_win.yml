name: CI on Windows

on:
  push:
    branches:
      - 'main'
  pull_request:
  # Enables a manual trigger, may run on any branch
  workflow_dispatch:

concurrency:
  group: windows-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  TZ: Europe/Berlin

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 180
    if: github.repository_owner == 'seqan' || github.event_name == 'workflow_dispatch'
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Visual Studio 17 2022"
            os: windows-2022
            vsversion : '2022'
            build_type: Release
            cxx_flags: "/std:c++latest"

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          path: repo
          submodules: true

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          vsversion: ${{ matrix.vsversion }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2

      - name: Install conda dependencies
        run: conda install -c conda-forge ccache boost-cpp bzip2 libxml2 zlib

      - name: Get cached build
        uses: actions/cache@v3
        with:
          path: .ccache
          key: ${{ matrix.name }}-ccache-${{ github.ref }}-${{ github.run_number }}
          # Restoring: From current branch, otherwise from base branch, otherwise from any branch.
          restore-keys: |
            ${{ matrix.name }}-ccache-${{ github.ref }}
            ${{ matrix.name }}-ccache-${{ github.base_ref }}
            ${{ matrix.name }}-ccache-

      - name: Configure tests
        env:
          SEQAN_WIN_CONTRIB_DIRECTORY: ${{ github.workspace }}\seqan-contrib
        run: |
          New-Item -Name "build" -ItemType "directory" -Force
          cd build
          cmake ../repo -G"${{ matrix.name }}" `
                         -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} `
                         -DCMAKE_CXX_FLAGS="${{ matrix.cxx_flags }}" `
                         -DSEQAN_DISABLE_VERSION_CHECK=ON `
                         -DSEQAN_GH_ACTIONS_BUILD:BOOL=ON `
                         -DPython3_ROOT_DIR=$env:pythonLocation `
                         -DPython3_EXECUTABLE=$env:pythonLocation/bin/python3 `
                         -DCMAKE_C_COMPILER_LAUNCHER=ccache `
                         -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

      - name: Build tests
        env:
          CCACHE_BASEDIR: ${{ github.workspace }}
          CCACHE_DIR: ${{ github.workspace }}/.ccache
          CCACHE_COMPRESS: true
          CCACHE_COMPRESSLEVEL: 6
          CCACHE_MAXSIZE: 200M
        run: |
          cd build
          cmake --build . --config "${{ matrix.build_type }}" --parallel 2 -- /p:TrackFileAccess=false

      - name: Run tests
        run: |
          cd build
          ctest . -j2 -C "${{ matrix.build_type }}" --output-on-failure --timeout 240 -E "build_manual|test_py_lib_dox"
          if (!$?)
          {
            ctest . -j2 -C "${{ matrix.build_type }}" --output-on-failure --timeout 240 --rerun-failed
          }
