name: CI ICC

on:
  push:
    branches:
      - 'main'
  pull_request:
  # Enables a manual trigger, may run on any branch
  workflow_dispatch:

concurrency:
  group: icc-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CMAKE_VERSION: 3.12.4
  TZ: Europe/Berlin

defaults:
  run:
    shell: bash -ex {0}

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ubuntu-22.04
    timeout-minutes: 180
    if: github.repository_owner == 'seqan' || github.event_name == 'workflow_dispatch'
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: "icc (c++20) on Linux"
            icc_version: "2022.1.0"
            cxx: icc
            cc: icc
            build_type: Release
            cxx_flags: "-gxx-name=g++-9 -gcc-name=gcc-9 -std=c++20"

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          path: repo
          fetch-depth: 2

      - name: Checkout SeqAn3
        uses: actions/checkout@v3
        with:
          repository: seqan/seqan3
          ref: 39e696830bbdcde0e520c87811db3eb5e083d7c0
          path: seqan3
          fetch-depth: 2
          submodules: false

      - name: Configure APT
        continue-on-error: true
        run: |
          bash ./seqan3/.github/workflows/scripts/configure_apt.sh
          wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
          sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
          echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
          sudo apt-get update -o Dir::Etc::sourcelist="sources.list.d/oneAPI.list" -o APT::Get::List-Cleanup="0"

      - name: Install CMake
        run: bash ./seqan3/.github/workflows/scripts/install_cmake.sh

      - name: Install ccache
        run: sudo apt-get install --yes ccache

      - name: Install compiler ${{ matrix.cxx }}
        run: sudo apt-get install --yes intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic-${{ matrix.icc_version }}

      - name: Tool versions
        run: |
          source /opt/intel/oneapi/compiler/${{ matrix.icc_version }}/env/vars.sh
          env cmake --version
          env ${{ matrix.cxx }} ${{ matrix.cxx_flags }} -v

      - name: Install dependencies
        run: sudo apt-get install --yes libboost-dev libbz2-dev libxml2-utils zlib1g-dev

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Load ccache
        uses: actions/cache@v3
        with:
          path: .ccache
          key: ${{ runner.os }}-${{ matrix.name }}-ccache-${{ github.ref }}-${{ github.run_number }}
          # Restoring: From current branch, otherwise from base branch, otherwise from any branch.
          restore-keys: |
            ${{ runner.os }}-${{ matrix.name }}-ccache-${{ github.ref }}
            ${{ runner.os }}-${{ matrix.name }}-ccache-${{ github.base_ref }}
            ${{ runner.os }}-${{ matrix.name }}-ccache-

      - name: Configure tests
        env:
          CXX: ${{ matrix.cxx }}
          CC: ${{ matrix.cc }}
        run: |
          source /opt/intel/oneapi/compiler/${{ matrix.icc_version }}/env/vars.sh
          mkdir build
          cd build
          cmake ../repo -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                        -DCMAKE_CXX_FLAGS="${{ matrix.cxx_flags }} -Wextra -Werror" \
                        -DSEQAN_DISABLE_VERSION_CHECK=ON \
                        -DSEQAN_GH_ACTIONS_BUILD:BOOL=ON \
                        -DPython3_ROOT_DIR=${pythonLocation} \
                        -DPython3_EXECUTABLE=${pythonLocation}/bin/python3 \
                        -DCMAKE_C_COMPILER_LAUNCHER=ccache \
                        -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

      - name: Build tests
        env:
          CCACHE_BASEDIR: ${{ github.workspace }}
          CCACHE_DIR: ${{ github.workspace }}/.ccache
          CCACHE_COMPRESS: true
          CCACHE_COMPRESSLEVEL: 6
          CCACHE_MAXSIZE: 200M
        run: |
          source /opt/intel/oneapi/compiler/${{ matrix.icc_version }}/env/vars.sh
          cd build
          make -k -j2

      - name: Run tests
        run: |
          source /opt/intel/oneapi/compiler/${{ matrix.icc_version }}/env/vars.sh
          cd build
          ctest . -j2 --output-on-failure --timeout 240 || ctest . -j2 --output-on-failure --timeout 240 --rerun-failed
